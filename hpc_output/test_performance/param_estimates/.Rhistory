geom_line(alpha=0.1) +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_grid(survival~CNV) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black"))
ggplot(alldata %>% filter(population == "bc02" & cell_number > 5e3), aes(generation, cell_number, group=Center, color=CNV)) +
geom_line(alpha=0.1) +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_grid(survival~CNV) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black"))
ggplot(alldata %>% filter(population == "bc02" & cell_number > 1e3), aes(generation, cell_number, group=Center, color=CNV)) +
geom_line(alpha=0.1) +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_grid(survival~CNV) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black"))
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line(alpha=0.05) +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(0.5, 0.05), guide = FALSE)
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line(alpha=0.05) +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(0.5, 0.05))#, guide = FALSE)
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line(alpha=0.05) +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(1, 0.05))#, guide = FALSE)
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line() +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(1, 0.05))#, guide = FALSE)
alldata = alldata %>%
left_join(alldata %>%
group_by(population, Center) %>%
filter(generation == 149 & cell_number > 0) %>%
mutate(survival = "survives") %>%
select(Center, population, survival)) %>%
mutate(survival = if_else(survival == "survives", "survives", "extinct"))
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line() +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(0.3, 0.05))#, guide = FALSE)
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line() +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(0.01, 0.2))#, guide = FALSE)
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line() +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(0.2, 0.01))#, guide = FALSE)
head(alldata)
unique(alldata$survival)
alldata = alldata %>%
left_join(alldata %>%
group_by(population, Center) %>%
filter(generation == 149 & cell_number > 0) %>%
mutate(survival = "survives") %>%
select(Center, population, survival)) %>%
mutate(survival = if_else(survival == "survives", "survives", "extinct"))
alldata = alldata %>%
mutate(survival = if_else(survival == "survives", "survives", "extinct"))
unique(alldata$survival)
alldata = alldata %>%
mutate(survival = if_else(is.na(survival),"extinct", "survives"))
unique(alldata$survival)
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line() +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(0.2, 0.001))#, guide = FALSE)
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line() +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(0.01, 0.2))#, guide = FALSE)
ggplot(alldata, aes(generation, cell_number, group=Center, color=CNV, alpha = survival)) +
geom_line() +
scale_y_log10("Number of cells", limits = c(1, 1e8), c(10^0, 10^1, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7, 10^8)) +
facet_wrap(~population) +
theme_minimal(base_size = 15) +
scale_color_manual(values = c("CNV" = "#6DB966", "noCNV" = "black")) +
scale_alpha_manual(values = c(0.05, 0.1))#, guide = FALSE)
library(tidyverse)
library(ggbeeswarm)
library(patchwork)
setwd("/Volumes/GoogleDrive/.shortcut-targets-by-id/19NQRq-XLPpjqJGmLbP4MHRjala2WVahk/Avecilla et al Simulating CNV evolution/scripts/cnv_sims_inference/hpc_output/test_performance/param_estimates/")
data_delfi = read_csv('est_real_params.csv') %>%
dplyr::filter(mu_snv > 0)
data_delfi = data_delfi %>%
mutate(sim_id = rownames(data_delfi))
data_abc = read.csv("est_real_params_abc.csv") %>%
dplyr::filter(mu_real > 0)
#transform back to actual rates and effects
data_delfi = data_delfi %>%
mutate(s_est = 10^s_est, s_real = 10^s_real,
mu_est = 10^mu_est, mu_real = 10^mu_real)
delfi_transformed = data_delfi %>%
mutate(mu_ratio = mu_est/mu_real, s_ratio = s_est/s_real)
abc_transformed = data_abc %>%
mutate(mu_ratio = mu_est/mu_real, s_ratio = s_est/s_real)
#CNV mutation rate
# New facet label names for SNV fitness variable
s_snv.labs <- c("SNV fitness 0.001","SNV fitness 0.1")
names(s_snv.labs) <- c("0.001", "0.1")
# New facet label names for SNV mutation rate variable
m_snv.labs <- c("SNV mutation rate 1e-7", "SNV mutation rate 1e-5")
names(m_snv.labs) <- c("1e-07", "1e-05")
# Create the plot
a <- ggplot(delfi_transformed,
aes(as.character(mu_real),
mu_ratio, color=as.character(s_real))) +
geom_boxplot() +
#geom_jitter() +
theme_light(base_size = 12) +
labs(color = "CNV fitness effect") +
facet_grid(mu_snv~s_snv,
labeller =labeller(mu_snv = m_snv.labs,s_snv = s_snv.labs)) +
xlab('CNV mutation rate') +
ylab('log10(CNV estimated/real mutation rate)') +
scale_y_log10(breaks = c(0.01, 0.10, 1, 10.00, 100.00), limits = c(0.012, 100)) +
scale_color_manual(values = c("#8dd3c7", "#bebada")) +
ggtitle("Inference with SNPE")
b <- ggplot(abc_transformed,
aes(as.character(mu_real),
mu_ratio, color=as.character(s_real))) +
geom_boxplot() +
#geom_jitter() +
theme_light(base_size = 12) +
labs(color = "CNV fitness effect") +
facet_grid(mu_snv~s_snv,
labeller =labeller(mu_snv = m_snv.labs,s_snv = s_snv.labs)) +
xlab('CNV mutation rate') +
ylab('log10(CNV estimated/real mutation rate)') +
scale_y_log10(breaks = c(0.01, 0.10, 1, 10.00, 100.00), limits = c(0.012, 100)) +
scale_color_manual(values = c("#8dd3c7", "#bebada")) +
ggtitle("Inference with ABC")
# CNV fitness effect
c <- ggplot(delfi_transformed,
aes(as.character(mu_real),
s_ratio, color=as.character(s_real))) +
geom_boxplot() +
#geom_jitter() +
theme_light(base_size = 12) +
labs(color = "CNV fitness effect") +
facet_grid(mu_snv~s_snv,
labeller =labeller(mu_snv = m_snv.labs,s_snv = s_snv.labs)) +
xlab('CNV mutation rate') +
ylab('log10(CNV estimated/real fitness effect)') +
scale_y_log10(breaks = c(0.01, 0.10, 1, 10.00, 100.00), limits = c(0.1, 100)) +
scale_color_manual(values = c("#8dd3c7", "#bebada")) +
ggtitle("Inference with SNPE")
d <- ggplot(abc_transformed,
aes(as.character(mu_real),
s_ratio, color=as.character(s_real))) +
geom_boxplot() +
#geom_jitter() +
theme_light(base_size = 12) +
labs(color = "CNV fitness effect") +
facet_grid(mu_snv~s_snv,
labeller =labeller(mu_snv = m_snv.labs,s_snv = s_snv.labs)) +
xlab('CNV mutation rate') +
ylab('log10(CNV estimated/real fitness effect)') +
scale_y_log10(breaks = c(0.01, 0.10, 1, 10.00, 100.00), limits = c(0.1, 200)) +
scale_color_manual(values = c("#8dd3c7", "#bebada")) +
ggtitle("Inference with ABC")
(a | b) / (c|d)
library(tidyverse)
library(ggbeeswarm)
library(patchwork)
library(scales)
theme_set(theme_bw(base_size = 15))
dir = "/Volumes/GoogleDrive/.shortcut-targets-by-id/19NQRq-XLPpjqJGmLbP4MHRjala2WVahk/Avecilla et al Simulating CNV evolution/scripts/cnv_sims_inference/hpc_output/test_performance/param_estimates/"
setwd(dir)
files = list.files(path = dir, pattern = '*est_real_params.csv')
read_est_params = function(x) {
if(str_detect(x, "SNPE")==TRUE){
file = read_csv(x, col_names = c("Model","Method","col_to_sep",
"s_est","mu_real",
"mu_est","s_snv","m_snv","map_dist",
"fit_95hdi_low","fit_95hdi_high",
"mut_95hdi_low","mut_95hdi_high",
"aic", "dic")) %>%
separate(col_to_sep, into = c(NA,NA,NA,"n_presim", "presim_rep","s_real"),
sep="([_.])") %>%
mutate(s_real = str_remove(s_real, "csv")) %>%
mutate(s_est_10 = s_est, s_real_10 = as.numeric(s_real),
mu_est_10 = mu_est, mu_real_10 = mu_real,
s_est = 10^s_est, s_real = 10^as.numeric(s_real),
mu_est = 10^mu_est, mu_real = 10^mu_real) %>%
mutate(mu_ratio = mu_est/mu_real, s_ratio = s_est/s_real,
mu_diff = mu_est - mu_real, s_diff = s_est - s_real)
}
if(str_detect(x, "pyABC")==TRUE) {
file = read_csv(x, col_names = c("Model","Method","col_to_sep",
"s_est","mu_real",
"mu_est","s_snv","m_snv","map_dist",
"fit_95hdi_low","fit_95hdi_high",
"mut_95hdi_low","mut_95hdi_high",
"aic", "dic")) %>%
separate(col_to_sep, into = c("n_presim","s_real"),
sep="([-])") %>%
mutate(s_real = as.numeric(s_real)*-1) %>%
mutate(presim_rep = case_when(str_detect(x, "_1_") ~ "1",
str_detect(x, "_2_") ~ "2",
str_detect(x, "_3_") ~ "3")) %>%
select("Model","Method","n_presim", "presim_rep","s_real",
"s_est","mu_real",
"mu_est","s_snv","m_snv","map_dist",
"fit_95hdi_low","fit_95hdi_high",
"mut_95hdi_low","mut_95hdi_high",
"aic", "dic") %>%
mutate(s_est_10 = s_est, s_real_10 = as.numeric(s_real),
mu_est_10 = mu_est, mu_real_10 = mu_real,
s_est = 10^s_est, s_real = 10^as.numeric(s_real),
mu_est = 10^mu_est, mu_real = 10^mu_real) %>%
mutate(mu_ratio = mu_est/mu_real, s_ratio = s_est/s_real,
mu_diff = mu_est - mu_real, s_diff = s_est - s_real)
}
return(file)
}
data_list = map(files,read_est_params)
data = do.call(rbind, data_list)
data_long = data %>%
pivot_longer(cols = c(mu_est,s_est), names_to = "parameter",
values_to = "value")
data_summary = data_long %>% group_by(Model, Method,n_presim, presim_rep, parameter, mu_real, s_real) %>%
summarise(mean_val = mean(value)) #
#### Fig 3 ####
color_vec = c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3","black")
mod_meth = c("Chemo NPE", "WF NPE", "Chemo ABC-SMC", "WF ABC-SMC", "Simulation")
d3 = data %>% filter(s_real == 0.1 & mu_real == 1e-5) %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(mod_method, Model, Method, sep = " ") %>%
add_row(mod_method = "Simulation", mu_est = 1e-5, s_est = 0.1,
mut_95hdi_low=-5, mut_95hdi_high=-5,
fit_95hdi_low=-1, fit_95hdi_high=-1, presim_rep="1") %>%
ggplot(aes(mu_est, s_est, color = mod_method)) + #, shape = presim_rep)) +
geom_point(size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = 10^fit_95hdi_low,ymax = 10^fit_95hdi_high), alpha=0.5) +
geom_errorbarh(aes(xmin = 10^mut_95hdi_low,xmax = 10^mut_95hdi_high), alpha=0.5) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
ggtitle("s = 0.1, μ = 1e-5")+
ylab("MAP s") +
xlab("MAP μ") +
geom_point(aes(x=1e-5, y=0.1), size = 2, show.legend = FALSE)
b3 = data %>% filter(s_real == 0.001 & mu_real == 1e-5) %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(mod_method, Model, Method, sep = " ") %>%
add_row(mod_method = "Simulation", mu_est = 1e-5, s_est = 0.001,
mut_95hdi_low=-5, mut_95hdi_high=-5,
fit_95hdi_low=-3, fit_95hdi_high=-3, presim_rep="1") %>%
ggplot(aes(mu_est, s_est, color = mod_method)) + #, shape = presim_rep)) +
geom_point(size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = 10^fit_95hdi_low,ymax = 10^fit_95hdi_high), alpha=0.5) +
geom_errorbarh(aes(xmin = 10^mut_95hdi_low,xmax = 10^mut_95hdi_high), alpha=0.5) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
ggtitle("s = 0.001, μ = 1e-5")+
ylab("MAP s") +
xlab("MAP μ")+
geom_point(aes(x=1e-5, y=0.001),size = 2,show.legend = FALSE)
c3 = data %>% filter(s_real == 0.1 & mu_real == 1e-7) %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(mod_method, Model, Method, sep = " ") %>%
add_row(mod_method = "Simulation", mu_est = 1e-7, s_est = 0.1,
mut_95hdi_low=-7, mut_95hdi_high=-7,
fit_95hdi_low=-1, fit_95hdi_high=-1, presim_rep="1") %>%
ggplot(aes(mu_est, s_est, color = mod_method)) + #, shape=presim_rep)) +
geom_point(size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = 10^fit_95hdi_low,ymax = 10^fit_95hdi_high), alpha=0.5) +
geom_errorbarh(aes(xmin = 10^mut_95hdi_low,xmax = 10^mut_95hdi_high), alpha=0.5) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
ggtitle("s = 0.1, μ = 1e-7") +
ylab("MAP s") +
xlab("MAP μ") +
geom_point(aes(x=1e-7, y=0.1),size = 2,show.legend = FALSE)
a3 = data %>% filter(s_real == 0.001 & mu_real == 1e-7) %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(mod_method, Model, Method, sep = " ") %>%
add_row(mod_method = "Simulation", mu_est = 1e-7, s_est = 0.001,
mut_95hdi_low=-7, mut_95hdi_high=-7,
fit_95hdi_low=-3, fit_95hdi_high=-3, presim_rep="1") %>%
ggplot(aes(mu_est, s_est, color = mod_method)) +#, shape=presim_rep)) +
geom_point(size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = 10^fit_95hdi_low,ymax = 10^fit_95hdi_high), alpha=0.5) +
geom_errorbarh(aes(xmin = 10^mut_95hdi_low,xmax = 10^mut_95hdi_high), alpha=0.5) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
ggtitle("s = 0.001, μ = 1e-7") +
ylab("MAP s") +
xlab("MAP μ") +
geom_point(aes(x=1e-7, y=0.001),size = 2,show.legend = FALSE)
# aic
e3 = data %>% unite(mod_method, Model, Method, sep = " ") %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(sim_params,s_real, mu_real) %>%
ggplot(aes(sim_params, aic, color = mod_method)) +
geom_boxplot() +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
#geom_beeswarm(dodge.width = 0.75, alpha =0.5) +
ylab("AIC") +
xlab("") +
scale_x_discrete(labels=c("0.001_1e-05" = "s = 0.001,\nμ = 1e-5",
"0.001_1e-07"  = "s = 0.001,\nμ = 1e-7",
"0.1_1e-05"  = "s = 0.1,\nμ = 1e-5",
"0.1_1e-07"  = "s = 0.1,\nμ = 1e-7"))
f3 = data %>% unite(mod_method, Model, Method, sep = " ") %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(sim_params,s_real, mu_real) %>%
ggplot(aes(sim_params, dic, color = mod_method)) +
geom_boxplot() +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
#geom_beeswarm(dodge.width = 0.75, alpha =0.5) +
ylab("DIC") +
xlab("") +
scale_x_discrete(labels=c("0.001_1e-05" = "s = 0.001,\nμ = 1e-5",
"0.001_1e-07"  = "s = 0.001,\nμ = 1e-7",
"0.1_1e-05"  = "s = 0.1,\nμ = 1e-5",
"0.1_1e-07"  = "s = 0.001,\nμ = 1e-7"))
# Posterior predictive check median distance
g3 = data %>% unite(mod_method, Model, Method, sep = " ") %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(sim_params,s_real, mu_real) %>%
group_by(mod_method, sim_params) %>%
summarise(med_dist = median(map_dist)) %>%
ggplot(aes(sim_params, med_dist, fill = mod_method)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=color_vec,
name="",
breaks=mod_meth) +
ylab("Median distance") +
xlab("") +
scale_x_discrete(labels=c("0.001_1e-05" = "s = 0.001,\nμ = 1e-5",
"0.001_1e-07"  = "s = 0.001,\nμ = 1e-7",
"0.1_1e-05"  = "s = 0.1,\nμ = 1e-5",
"0.1_1e-07"  = "s = 0.001,\nμ = 1e-7"))
fig3 = (a3 + b3) / (c3 + d3) / (e3 + f3) # /g3
fig3 + plot_annotation(tag_levels = 'A')
files
data
#### Fig 3 ####
color_vec = c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3","black")
mod_meth = c("Chemo SNPE", "WF SNPE", "Chemo ABC-SMC", "WF ABC-SMC", "Simulation")
d3 = data %>% filter(s_real == 0.1 & mu_real == 1e-5) %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(mod_method, Model, Method, sep = " ") %>%
add_row(mod_method = "Simulation", mu_est = 1e-5, s_est = 0.1,
mut_95hdi_low=-5, mut_95hdi_high=-5,
fit_95hdi_low=-1, fit_95hdi_high=-1, presim_rep="1") %>%
ggplot(aes(mu_est, s_est, color = mod_method)) + #, shape = presim_rep)) +
geom_point(size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = 10^fit_95hdi_low,ymax = 10^fit_95hdi_high), alpha=0.5) +
geom_errorbarh(aes(xmin = 10^mut_95hdi_low,xmax = 10^mut_95hdi_high), alpha=0.5) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
ggtitle("s = 0.1, μ = 1e-5")+
ylab("MAP s") +
xlab("MAP μ") +
geom_point(aes(x=1e-5, y=0.1), size = 2, show.legend = FALSE)
b3 = data %>% filter(s_real == 0.001 & mu_real == 1e-5) %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(mod_method, Model, Method, sep = " ") %>%
add_row(mod_method = "Simulation", mu_est = 1e-5, s_est = 0.001,
mut_95hdi_low=-5, mut_95hdi_high=-5,
fit_95hdi_low=-3, fit_95hdi_high=-3, presim_rep="1") %>%
ggplot(aes(mu_est, s_est, color = mod_method)) + #, shape = presim_rep)) +
geom_point(size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = 10^fit_95hdi_low,ymax = 10^fit_95hdi_high), alpha=0.5) +
geom_errorbarh(aes(xmin = 10^mut_95hdi_low,xmax = 10^mut_95hdi_high), alpha=0.5) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
ggtitle("s = 0.001, μ = 1e-5")+
ylab("MAP s") +
xlab("MAP μ")+
geom_point(aes(x=1e-5, y=0.001),size = 2,show.legend = FALSE)
c3 = data %>% filter(s_real == 0.1 & mu_real == 1e-7) %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(mod_method, Model, Method, sep = " ") %>%
add_row(mod_method = "Simulation", mu_est = 1e-7, s_est = 0.1,
mut_95hdi_low=-7, mut_95hdi_high=-7,
fit_95hdi_low=-1, fit_95hdi_high=-1, presim_rep="1") %>%
ggplot(aes(mu_est, s_est, color = mod_method)) + #, shape=presim_rep)) +
geom_point(size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = 10^fit_95hdi_low,ymax = 10^fit_95hdi_high), alpha=0.5) +
geom_errorbarh(aes(xmin = 10^mut_95hdi_low,xmax = 10^mut_95hdi_high), alpha=0.5) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
ggtitle("s = 0.1, μ = 1e-7") +
ylab("MAP s") +
xlab("MAP μ") +
geom_point(aes(x=1e-7, y=0.1),size = 2,show.legend = FALSE)
a3 = data %>% filter(s_real == 0.001 & mu_real == 1e-7) %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(mod_method, Model, Method, sep = " ") %>%
add_row(mod_method = "Simulation", mu_est = 1e-7, s_est = 0.001,
mut_95hdi_low=-7, mut_95hdi_high=-7,
fit_95hdi_low=-3, fit_95hdi_high=-3, presim_rep="1") %>%
ggplot(aes(mu_est, s_est, color = mod_method)) +#, shape=presim_rep)) +
geom_point(size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = 10^fit_95hdi_low,ymax = 10^fit_95hdi_high), alpha=0.5) +
geom_errorbarh(aes(xmin = 10^mut_95hdi_low,xmax = 10^mut_95hdi_high), alpha=0.5) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
ggtitle("s = 0.001, μ = 1e-7") +
ylab("MAP s") +
xlab("MAP μ") +
geom_point(aes(x=1e-7, y=0.001),size = 2,show.legend = FALSE)
# aic
e3 = data %>% unite(mod_method, Model, Method, sep = " ") %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(sim_params,s_real, mu_real) %>%
ggplot(aes(sim_params, aic, color = mod_method)) +
geom_boxplot() +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
#geom_beeswarm(dodge.width = 0.75, alpha =0.5) +
ylab("AIC") +
xlab("") +
scale_x_discrete(labels=c("0.001_1e-05" = "s = 0.001,\nμ = 1e-5",
"0.001_1e-07"  = "s = 0.001,\nμ = 1e-7",
"0.1_1e-05"  = "s = 0.1,\nμ = 1e-5",
"0.1_1e-07"  = "s = 0.1,\nμ = 1e-7"))
f3 = data %>% unite(mod_method, Model, Method, sep = " ") %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(sim_params,s_real, mu_real) %>%
ggplot(aes(sim_params, dic, color = mod_method)) +
geom_boxplot() +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
#geom_beeswarm(dodge.width = 0.75, alpha =0.5) +
ylab("DIC") +
xlab("") +
scale_x_discrete(labels=c("0.001_1e-05" = "s = 0.001,\nμ = 1e-5",
"0.001_1e-07"  = "s = 0.001,\nμ = 1e-7",
"0.1_1e-05"  = "s = 0.1,\nμ = 1e-5",
"0.1_1e-07"  = "s = 0.001,\nμ = 1e-7"))
# Posterior predictive check median distance
g3 = data %>% unite(mod_method, Model, Method, sep = " ") %>%
filter(n_presim == "100000") %>%
filter(presim_rep == "1") %>%
unite(sim_params,s_real, mu_real) %>%
group_by(mod_method, sim_params) %>%
summarise(med_dist = median(map_dist)) %>%
ggplot(aes(sim_params, med_dist, fill = mod_method)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=color_vec,
name="",
breaks=mod_meth) +
ylab("Median distance") +
xlab("") +
scale_x_discrete(labels=c("0.001_1e-05" = "s = 0.001,\nμ = 1e-5",
"0.001_1e-07"  = "s = 0.001,\nμ = 1e-7",
"0.1_1e-05"  = "s = 0.1,\nμ = 1e-5",
"0.1_1e-07"  = "s = 0.001,\nμ = 1e-7"))
fig3 = (a3 + b3) / (c3 + d3) / (e3 + f3) # /g3
fig3 + plot_annotation(tag_levels = 'A')
