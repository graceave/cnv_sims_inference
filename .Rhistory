"0.01_1e-3"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.01_1e-9"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.1_1e-3"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.1_1e-9"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_1e-3"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.001_1e-9"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_1e-5"  =expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.001_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.1_1e-5"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.1_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-7")))))
s_supp
a_supp
data_s = data_all %>% filter(Method == "rejection ABC" & Model == "Chemo" & n_presim=="100000") %>% # & n_presim=="100000"
bind_rows(data_all %>% filter(n_presim == "100000" & flow_type == "NSF" & Model == "Chemo")) %>% #n_presim == "100000" &
mutate(flow_type = if_else(!is.na(flow_type),flow_type, "")) %>%
unite(mod_method, Model, Method, flow_type, sep = " ", remove=F) %>%
unite(sim_params,s_real, mu_real, remove = F) #%>%
hdr_data_long = hdr_data %>%
filter(method == "rejection ABC" & obs_model == "Chemo" & n_presim==100000) %>% #& n_presim==100000
bind_rows(hdr_data %>% filter(n_presim == 100000 &flow_type == "NSF" & obs_model == "Chemo")) %>% #n_presim == 100000 &
mutate(flow_type = if_else(!is.na(flow_type),flow_type, "")) %>%
unite(mod_method, obs_model, method, flow_type, sep = " ", remove=F) %>%
pivot_longer(cols = starts_with("0."), names_to = "sim_params", values_to = "in_hdr")  #%>%
mod_meth = c("Chemo NPE", "WF NPE", "Chemo rejection ABC ", "WF rejection ABC ", "Pseudo-observation")
data_s = data_all %>% filter(Method == "rejection ABC" & Model == "Chemo" & n_presim=="100000") %>% # & n_presim=="100000"
bind_rows(data_all %>% filter(n_presim == "100000" & flow_type == "NSF" & Model == "Chemo")) %>% #n_presim == "100000" &
mutate(flow_type = if_else(!is.na(flow_type),flow_type, "")) %>%
unite(mod_method, Model, Method, flow_type, sep = " ", remove=F) %>%
unite(sim_params,s_real, mu_real, remove = F) #%>%
hdr_data_long = hdr_data %>%
filter(method == "rejection ABC" & obs_model == "Chemo" & n_presim==100000) %>% #& n_presim==100000
bind_rows(hdr_data %>% filter(n_presim == 100000 &flow_type == "NSF" & obs_model == "Chemo")) %>% #n_presim == 100000 &
mutate(flow_type = if_else(!is.na(flow_type),flow_type, "")) %>%
unite(mod_method, obs_model, method, flow_type, sep = " ", remove=F) %>%
pivot_longer(cols = starts_with("0."), names_to = "sim_params", values_to = "in_hdr")  #%>%
a_supp = hdr_data_long %>% mutate(in_hdr_prop = in_hdr/5) %>%
group_by(mod_method, sim_params, HDR) %>%
summarize(mean_in_hdr_prop = mean(in_hdr_prop)) %>%#*100) %>%
ggplot(aes(sim_params, mean_in_hdr_prop,fill=mod_method)) +#, shape = as.factor(rep))) +
#geom_boxplot() +
geom_bar(stat="identity", position="dodge") +
geom_point(data=hdr_data_long %>% mutate(in_hdr_prop = in_hdr/5),
aes(sim_params, in_hdr_prop,fill=mod_method,shape = as.factor(rep)),
color="black",
position = position_jitterdodge(dodge.width = 1),
size=3) +
scale_fill_manual(values=color_vec,name="", breaks=mod_meth) +
scale_shape_manual(values = c(21, 22, 23), name = "Training set") +
xlab("") +
ylab("Percent of true parameters\nin HDR") +
scale_y_continuous(labels = scales::percent) +#, limits = c(0,100)) +
ggtitle("A") +
facet_wrap(~HDR, ncol = 1) +
#ylim(c(0,100)) +
scale_x_discrete(labels=c("0.01_1e-7"  =expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.01_1e-5"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.01_1e-3"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.01_1e-9"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.1_1e-3"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.1_1e-9"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_1e-3"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.001_1e-9"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_1e-5"  =expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.001_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.1_1e-5"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.1_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-7")))))
a_supp
hdr_data_long$mod_method
mod_meth = c("Chemo NPE NSF", "WF NPE NSF", "Chemo rejection ABC ", "WF rejection ABC ", "Pseudo-observation")
a_supp = hdr_data_long %>% mutate(in_hdr_prop = in_hdr/5) %>%
group_by(mod_method, sim_params, HDR) %>%
summarize(mean_in_hdr_prop = mean(in_hdr_prop)) %>%#*100) %>%
ggplot(aes(sim_params, mean_in_hdr_prop,fill=mod_method)) +#, shape = as.factor(rep))) +
#geom_boxplot() +
geom_bar(stat="identity", position="dodge") +
geom_point(data=hdr_data_long %>% mutate(in_hdr_prop = in_hdr/5),
aes(sim_params, in_hdr_prop,fill=mod_method,shape = as.factor(rep)),
color="black",
position = position_jitterdodge(dodge.width = 1),
size=3) +
scale_fill_manual(values=color_vec,name="", breaks=mod_meth) +
scale_shape_manual(values = c(21, 22, 23), name = "Training set") +
xlab("") +
ylab("Percent of true parameters\nin HDR") +
scale_y_continuous(labels = scales::percent) +#, limits = c(0,100)) +
ggtitle("A") +
facet_wrap(~HDR, ncol = 1) +
#ylim(c(0,100)) +
scale_x_discrete(labels=c("0.001_1e-5"  =expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.001_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.1_1e-5"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.1_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-7")))))
a_supp
hdr_data_long
hdr_data_long = hdr_data %>%
filter(method == "rejection ABC" & obs_model == "Chemo" & n_presim==100000) %>% #& n_presim==100000
bind_rows(hdr_data %>% filter(n_presim == 100000 &flow_type == "NSF" & obs_model == "Chemo")) %>% #n_presim == 100000 &
mutate(flow_type = if_else(!is.na(flow_type),flow_type, "")) %>%
unite(mod_method, obs_model, method, flow_type, sep = " ", remove=F) %>%
pivot_longer(cols = starts_with("0."), names_to = "sim_params", values_to = "in_hdr") %>%
filter(!is.na(HDR))#%>%
a_supp = hdr_data_long %>% mutate(in_hdr_prop = in_hdr/5) %>%
group_by(mod_method, sim_params, HDR) %>%
summarize(mean_in_hdr_prop = mean(in_hdr_prop)) %>%#*100) %>%
ggplot(aes(sim_params, mean_in_hdr_prop,fill=mod_method)) +#, shape = as.factor(rep))) +
#geom_boxplot() +
geom_bar(stat="identity", position="dodge") +
geom_point(data=hdr_data_long %>% mutate(in_hdr_prop = in_hdr/5),
aes(sim_params, in_hdr_prop,fill=mod_method,shape = as.factor(rep)),
color="black",
position = position_jitterdodge(dodge.width = 1),
size=3) +
scale_fill_manual(values=color_vec,name="", breaks=mod_meth) +
scale_shape_manual(values = c(21, 22, 23), name = "Training set") +
xlab("") +
ylab("Percent of true parameters\nin HDR") +
scale_y_continuous(labels = scales::percent) +#, limits = c(0,100)) +
ggtitle("A") +
facet_wrap(~HDR, ncol = 1) +
#ylim(c(0,100)) +
scale_x_discrete(labels=c("0.001_1e-5"  =expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.001_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.1_1e-5"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.1_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-7")))))
a_supp
hdr_data_long
hdr_data_long = hdr_data %>%
filter(method == "rejection ABC" & obs_model == "Chemo" & n_presim==100000) %>% #& n_presim==100000
bind_rows(hdr_data %>% filter(n_presim == 100000 &flow_type == "NSF" & obs_model == "Chemo")) %>% #n_presim == 100000 &
mutate(flow_type = if_else(!is.na(flow_type),flow_type, "")) %>%
unite(mod_method, obs_model, method, flow_type, sep = " ", remove=F) %>%
pivot_longer(cols = starts_with("0."), names_to = "sim_params", values_to = "in_hdr") %>%
filter(!is.na(in_hdr))#%>%
a_supp = hdr_data_long %>% mutate(in_hdr_prop = in_hdr/5) %>%
group_by(mod_method, sim_params, HDR) %>%
summarize(mean_in_hdr_prop = mean(in_hdr_prop)) %>%#*100) %>%
ggplot(aes(sim_params, mean_in_hdr_prop,fill=mod_method)) +#, shape = as.factor(rep))) +
#geom_boxplot() +
geom_bar(stat="identity", position="dodge") +
geom_point(data=hdr_data_long %>% mutate(in_hdr_prop = in_hdr/5),
aes(sim_params, in_hdr_prop,fill=mod_method,shape = as.factor(rep)),
color="black",
position = position_jitterdodge(dodge.width = 1),
size=3) +
scale_fill_manual(values=color_vec,name="", breaks=mod_meth) +
scale_shape_manual(values = c(21, 22, 23), name = "Training set") +
xlab("") +
ylab("Percent of true parameters\nin HDR") +
scale_y_continuous(labels = scales::percent) +#, limits = c(0,100)) +
ggtitle("A") +
facet_wrap(~HDR, ncol = 1) +
#ylim(c(0,100)) +
scale_x_discrete(labels=c("0.001_1e-5"  =expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.001_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.1_1e-5"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.1_1e-7"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-7")))))
a_supp
data_s = data_all %>% filter(Method == "rejection ABC" & Model == "Chemo" & n_presim=="100000") %>% # & n_presim=="100000"
bind_rows(data_all %>% filter(n_presim == "100000" & flow_type == "NSF" & Model == "Chemo")) %>% #n_presim == "100000" &
mutate(flow_type = if_else(!is.na(flow_type),flow_type, "")) %>%
unite(mod_method, Model, Method, flow_type, sep = " ", remove=F) %>%
unite(sim_params,s_real, mu_real, remove = F) %>%
filter(!is.na(fit_hdi_width))
data_s = data_all %>% filter(Method == "rejection ABC" & Model == "Chemo" & n_presim=="100000") %>% # & n_presim=="100000"
bind_rows(data_all %>% filter(n_presim == "100000" & flow_type == "NSF" & Model == "Chemo")) %>% #n_presim == "100000" &
mutate(flow_type = if_else(!is.na(flow_type),flow_type, "")) %>%
unite(mod_method, Model, Method, flow_type, sep = " ", remove=F) %>%
unite(sim_params,s_real, mu_real, remove = F) %>%
filter(!is.na(fit_hdi_width))
data_s = data_all %>% filter(Method == "rejection ABC" & Model == "Chemo" & n_presim=="100000") %>% # & n_presim=="100000"
bind_rows(data_all %>% filter(n_presim == "100000" & flow_type == "NSF" & Model == "Chemo")) %>% #n_presim == "100000" &
mutate(flow_type = if_else(!is.na(flow_type),flow_type, "")) %>%
unite(mod_method, Model, Method, flow_type, sep = " ", remove=F) %>%
unite(sim_params,s_real, mu_real, remove = F) #%>%
b_supp = data_s %>% mutate(fit_hdi_width= 10^fit_95hdi_high - 10^fit_95hdi_low) %>%
ggplot(aes(sim_params, fit_hdi_width, color = mod_method)) + #, shape = as.factor(presim_rep))) +
#geom_point(position = position_jitterdodge()) +
geom_boxplot() +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
ylab("s 95% HDI width") +
xlab("") +
#theme(legend.position = "none") +
scale_x_discrete(labels=c("0.01_1e-07"  =expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.01_1e-05"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.01_0.001"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.01_1e-09"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.1_0.001"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.1_1e-09"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_0.001"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.001_1e-09"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_1e-05"  =expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.001_1e-07"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.1_1e-05"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.1_1e-07"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-7"))))) +
ggtitle("B")
b_supp
c_supp = data_s %>%
mutate(mut_hdi_width= mut_95hdi_high - mut_95hdi_low) %>%
ggplot(aes(sim_params, mut_hdi_width, color = mod_method)) +#, shape = as.factor(presim_rep))) +
#geom_point(position = position_jitterdodge()) +
geom_boxplot() +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
scale_y_log10() +
ylab(expression(paste(delta," 95% HDI width, log10"))) +
xlab("") +
scale_x_discrete(labels=c("0.01_1e-07"  =expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.01_1e-05"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.01_0.001"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.01_1e-09"  = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.1_0.001"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.1_1e-09"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_0.001"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.001_1e-09"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_1e-05"  =expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.001_1e-07"  = expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.1_1e-05"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.1_1e-07"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-7"))))) +
ggtitle("C")
data_s$sim_params = factor(data_s$sim_params,
levels = c("0.01_1e-07", "0.01_1e-05",  "0.01_0.001",  "0.01_1e-09",
"0.1_0.001",   "0.1_1e-09",   "0.001_0.001", "0.001_1e-09",
"0.001_1e-05", "0.001_1e-07", "0.1_1e-05", "0.1_1e-07"),
ordered = TRUE, labels=c("0.01_1e-07" = expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.01_1e-05"=expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.01_0.001"=expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.01_1e-09"=expression(atop(paste(italic("s"[C])," = 0.01,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.1_0.001"=expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.1_1e-09"=expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_0.001"=expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-3"))),
"0.001_1e-09"=expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-9"))),
"0.001_1e-05"=expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.001_1e-07"=expression(atop(paste(italic("s"[C])," = 0.001,"), paste(italic(delta[C]), "  = 1e-7"))),
"0.1_1e-05"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-5"))),
"0.1_1e-07"  = expression(atop(paste(italic("s"[C])," = 0.1,"), paste(italic(delta[C]), "  = 1e-7")))
))
data_d = data_s %>%
pivot_longer(cols = c("mu_ratio", "s_ratio"),
names_to = "error_type", values_to = "log10 ( MAP parameter / true parameter )") %>%
mutate(`log10 ( MAP parameter / true parameter )` = log10(`log10 ( MAP parameter / true parameter )`))
d_supp = data_d %>%
filter(n_presim == "100000") %>%
ggplot(aes(error_type,`log10 ( MAP parameter / true parameter )`, color=mod_method)) +
geom_boxplot() +
geom_point(aes(shape=presim_rep),position = position_jitterdodge()) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
xlab("") +
facet_wrap(~sim_params, labeller=label_parsed, scales = "free", ncol=4) +
scale_x_discrete(labels=c("s_ratio"  = expression(italic("s"[C])),
"mu_ratio" = expression(italic(delta[C]))))+
xlab("Relative error type") +
theme(panel.spacing.x=unit(1, "lines")) +
ggtitle("D")
d_supp
e_supp = data_s %>%
ggplot(aes(mod_method,mean_rmse_ppc, color=mod_method)) +
#geom_point(position=position_jitter()) +
geom_pointrange(aes(ymin = rmse95_low_ppc,ymax = rmse95_hi_ppc), alpha=0.5,
position=position_jitter()) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
#theme(legend.position = "none") +
facet_wrap(~sim_params, labeller=label_parsed, ncol=4,strip.position="bottom") +
xlab("") +
ylab("Posterior predictive check \nroot mean square error") +
theme(axis.text.x=element_blank()) +
ggtitle("E")
e_supp
f_supp = data_s %>%
#  ggplot(aes(sim_params,rmse_map, color=mod_method)) +
ggplot(aes(mod_method,rmse_map, color=mod_method)) +
facet_wrap(~sim_params, labeller=label_parsed, ncol=4,strip.position="bottom") +
geom_boxplot() +
geom_point(position = position_jitterdodge()) +
theme(axis.text.x=element_blank()) +
scale_color_manual(values=color_vec,
name="",
breaks=mod_meth) +
xlab("") +
ylab("MAP posterior prediction \nroot mean square error") +
ggtitle("F")
f_supp
layout <- "
AAABBB
AAACCC
DDDDDD
DDDDDD
EEEFFF
"
supp = a_supp + b_supp + c_supp + d_supp + e_supp + f_supp +
plot_layout(design = layout)
supp
#ggsave(paste0(fig_path,"SupplementaryFig5.pdf"), plot = supp, width = 30, height = 25, units = "in")
ggsave(paste0(fig_path,"RejectionABCChemo.png"), plot = supp, width = 40, height = 30, units = "in")
layout <- "
AAABBB
AAACCC
DDDDDD
DDDDDD
EEEFFF
"
supp = a_supp + b_supp + c_supp + d_supp + e_supp + f_supp +
plot_layout(design = layout)
supp
#ggsave(paste0(fig_path,"SupplementaryFig5.pdf"), plot = supp, width = 30, height = 25, units = "in")
ggsave(paste0(fig_path,"RejectionABCChemo.png"), plot = supp, width = 30, height = 20, units = "in")
library(tidyverse)
library(patchwork)
library(groupdata2)
library(ggridges)
theme_set(theme_classic(base_size = 21))
bar_dir = "/Volumes/GoogleDrive/.shortcut-targets-by-id/19NQRq-XLPpjqJGmLbP4MHRjala2WVahk/Avecilla et al Simulating CNV evolution/scripts/cnv_sims_inference/barcode_dfe/"
param_dir = "/Volumes/GoogleDrive/.shortcut-targets-by-id/19NQRq-XLPpjqJGmLbP4MHRjala2WVahk/Avecilla et al Simulating CNV evolution/scripts/cnv_sim_inf_old/hpc_output/Lauer2018/"
fit_dir = "/Volumes/GoogleDrive/.shortcut-targets-by-id/19NQRq-XLPpjqJGmLbP4MHRjala2WVahk/Avecilla et al Simulating CNV evolution/scripts/cnv_sim_inf_old/fitness_assays/"
fig_path = "/Volumes/GoogleDrive/.shortcut-targets-by-id/19NQRq-XLPpjqJGmLbP4MHRjala2WVahk/Avecilla et al Simulating CNV evolution/figures/"
cnv_barcodes = read_csv(paste0(bar_dir,"CNV_barcodes.csv")) %>%
mutate(CNV = "CNV")
bar_dir = "/Volumes/GoogleDrive/.shortcut-targets-by-id/19NQRq-XLPpjqJGmLbP4MHRjala2WVahk/Avecilla et al Simulating CNV evolution/scripts/cnv_sim_inf_old/barcode_method/"
cnv_barcodes = read_csv(paste0(bar_dir,"CNV_barcodes.csv")) %>%
mutate(CNV = "CNV")
read_est_params = function(x) {
if(str_detect(x, "NPE")==TRUE){
file = read_csv(x, col_names = c("Model","Method","col_to_sep","col_to_sep2",
"mu_est","s_snv","m_snv","rmse_map",
"mean_rmse_ppc","rmse95_low_ppc","rmse95_hi_ppc",
"corr_map",
"mean_corr_ppc","corr95_low_ppc", "corr95_hi_ppc",
"fit_95hdi_low","fit_95hdi_high",
"mut_95hdi_low","mut_95hdi_high",
"aic", "dic", "waic1", "waic2")) %>%
separate(col_to_sep, into = c(NA,NA,NA,"n_presim", "presim_rep"),
sep="([_.])") %>%
separate(col_to_sep2, into = c("Population", "s_est"),
sep="([-])") %>%
mutate(s_est_10 = as.numeric(s_est)*-1,
mu_est_10 = mu_est,
s_est = 10^(as.numeric(s_est)*-1),
mu_est = 10^mu_est) %>%
mutate(flow_type = if_else(str_detect(x, "nsf"), "NSF", "MAF"))
}
if(str_detect(x, "ABC")==TRUE) {
file = read_csv(x, col_names = c("Model","Method","n_presim","col_to_sep",
"mu_est","s_snv","m_snv","rmse_map",
"mean_rmse_ppc","rmse95_low_ppc","rmse95_hi_ppc",
"corr_map",
"mean_corr_ppc","corr95_low_ppc", "corr95_hi_ppc",
"fit_95hdi_low","fit_95hdi_high",
"mut_95hdi_low","mut_95hdi_high",
"aic", "dic", "waic1", "waic2")) %>%
separate(col_to_sep, into = c("Population", "s_est"),
sep="([-])") %>%
mutate(presim_rep = case_when(str_detect(x, "_1_") ~ "1",
str_detect(x, "_2_") ~ "2",
str_detect(x, "_3_") ~ "3")) %>%
mutate(s_est_10 = as.numeric(s_est)*-1,
mu_est_10 = mu_est,
s_est = 10^(as.numeric(s_est)*-1),
mu_est = 10^mu_est) %>%
select("Model","Method","n_presim", "presim_rep","Population",
"s_est","mu_est","s_snv","m_snv","rmse_map",
"mean_rmse_ppc","rmse95_low_ppc","rmse95_hi_ppc",
"corr_map",
"mean_corr_ppc","corr95_low_ppc", "corr95_hi_ppc",
"fit_95hdi_low","fit_95hdi_high",
"mut_95hdi_low","mut_95hdi_high",
"aic", "dic", "waic1", "waic2", "s_est_10", "mu_est_10") %>%
mutate(flow_type = NA) %>%
mutate(n_presim = if_else(n_presim == 100, "10000", "100000"))
}
return(file)
}
bc04 = read_csv(paste0(bar_dir,'2021-09_data_analysis/data_bc04/bc04_cluster.csv'),
col_names = c("barcode", "g5","g37","g62","g99","g124","g149"))
bc04_filtered_barcodes = read_csv(paste0(bar_dir,'./2021-09_data_analysis/data_bc04/bc04_bcfiltered_barcodes.csv'),
col_names = F)
bc_04_filtered = bc04 %>%
#select only lineages that made it through the filter for dfe
filter(barcode %in% bc04_filtered_barcodes$X1) %>%
mutate(population = "bc01")
bc_04_freq = bc_04_filtered %>%
#convert from reads to relative frequency
mutate(g5 = g5/sum(g5),
g37 = g37/sum(g37),
g62 = g62/sum(g62),
g99 = g99/sum(g99),
g124 = g124/sum(g124),
g149 = g149/sum(g149)) %>%
pivot_longer(cols=starts_with("g"), names_to = "generation", values_to = "relative_freq") %>%
mutate(generation = str_remove(generation, "g")) %>%
mutate(cell_number = relative_freq*3e8)
#filter out ugly lineages for plotting
alldata = bc_04_filtered %>%
left_join(cnv_barcodes, by= c("barcode" = "barcode", "population"="population")) %>%
filter(g5 > 0) %>%
filter(!(g37 == 0 & g62 >0)) %>%
filter(!(g62 == 0 & g99 >0)) %>%
filter(!(g99 == 0 & g124 >0)) %>%
filter(!(g124 == 0 & g149 >0)) %>%
mutate(CNV = if_else(is.na(CNV), "noCNV", "CNV")) %>%
mutate(g5 = g5/sum(g5),
g37 = g37/sum(g37),
g62 = g62/sum(g62),
g99 = g99/sum(g99),
g124 = g124/sum(g124),
g149 = g149/sum(g149)) %>%
pivot_longer(cols=starts_with("g"), names_to = "generation", values_to = "relative_freq") %>%
mutate(generation = str_remove(generation, "g")) %>%
mutate(cell_number = relative_freq*3e8)
dfe = read_csv(paste0(bar_dir, "2021-09_data_analysis/bc04_v2_a_MutSeq_Result.csv")) %>%
bind_cols(bc04_filtered_barcodes) %>%
rename(barcode = X1) %>%
mutate(population = "bc01") %>%
left_join(cnv_barcodes, by= c("barcode" = "barcode", "population"="population")) %>%
mutate(CNV = if_else(is.na(CNV), "noCNV", "CNV"))
## summary ##
dfe %>%
mutate(adaptive = if_else(Mutation_Fitness > 0, "adaptive", "neutral")) %>%
group_by(population, CNV, adaptive) %>%
summarize(n_lineages = n())
param_files = list.files(path = paste0(param_dir, "single116/param_estimates/"), pattern = '*est_real_params.csv')
param_files = paste0(param_dir, "single116/param_estimates/", param_files)
param_list = map(param_files,read_est_params)
param_all = do.call(rbind, param_list)
fit_data = read_csv(paste0(fit_dir, "clone_fitness_pergen.csv")) %>%
filter(!(str_detect(clone, "DGY1657"))) #remove ancestor
fit_for_regress = read_csv(paste0(fit_dir,"data_props_Lauer2018.csv"))
p_data = param_all %>%
filter(Method == "NPE" & flow_type == "NSF" & n_presim == "100000") %>%
mutate(Model = case_when(Model == "Chemo"~"Chemo NPE",
Model == "WF"~"WF NPE")) %>%
select(Population, presim_rep, s_est, Model) %>%
bind_rows(dfe %>%
filter(CNV == "CNV" & Mutation_Fitness >0) %>%
mutate(Model = "Lineage tracking", presim_rep = "", s_est = Mutation_Fitness, Population = population) %>%
select(Population, presim_rep, s_est, Model)) %>%
bind_rows(fit_data %>%
filter(fitness_coef > 0) %>%
mutate(Model = "Competition assays", presim_rep = "",
s_est = fitness_coef, Population = clone) %>%
select(Population, presim_rep, s_est, Model)) %>%
mutate(Model = fct_relevel(Model, levels = "Lineage tracking", "Fitness assays",
"Chemo NPE", "WF NPE"))
c = p_data %>%
ggplot(aes(x = s_est, y = fct_rev(Model), group =Model, fill = Model )) +
geom_density_ridges2(stat = "binline", bins=25, scale = 1) +
#geom_histogram() +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0,0.2)) +
coord_cartesian(clip = "off") +
theme_ridges(center_axis_labels = TRUE) +
xlab(expression(paste("Selection coefficient, ", italic("s"[C])))) +
ylab("") +
#scale_x_log10() +
theme(legend.position = "none") +
scale_fill_manual(values = c("Competition assays" = "grey","Lineage tracking"="#a6cee3", "Chemo NPE" = "#4daf4a", "WF NPE" = "#984ea3"))
c
p_data
p_data
p_data %>% group_by(Model) %>%
summarise(mean_s = mean(s_est), median_s = median(s_est),
sd_s = sd(s_est, na.rm = TRUE),
n_s = n()) %>%
mutate(se_s = sd / sqrt(n_s),
lower_ci_s = mean_s - qt(1 - (0.05 / 2), n_s - 1) * se_s,
upper_ci_s = mean_s  + qt(1 - (0.05 / 2), n_s - 1) * se_s))
p_data %>% group_by(Model) %>%
summarise(mean_s = mean(s_est), median_s = median(s_est),
sd_s = sd(s_est, na.rm = TRUE),
n_s = n()) %>%
mutate(se_s = sd / sqrt(n_s),
lower_ci_s = mean_s - qt(1 - (0.05 / 2), n_s - 1) * se_s,
upper_ci_s = mean_s  + qt(1 - (0.05 / 2), n_s - 1) * se_s)
p_data %>% group_by(Model) %>%
summarise(mean_s = mean(s_est), median_s = median(s_est),
sd_s = sd(s_est, na.rm = TRUE),
n_s = n())
p_data %>% group_by(Model) %>%
summarise(mean_s = mean(s_est), median_s = median(s_est),
sd_s = sd(s_est, na.rm = TRUE),
n_s = n()) %>%
mutate(se_s = sd_s / sqrt(n_s),
lower_ci_s = mean_s - qt(1 - (0.05 / 2), n_s - 1) * se_s,
upper_ci_s = mean_s  + qt(1 - (0.05 / 2), n_s - 1) * se_s)
0.04437453/0.06868074
0.06868074/0.04437453
0.06666056/0.03876395
?quantile
p_data %>% group_by(Model) %>%
summarise(mean_s = mean(s_est), median_s = median(s_est),
sd_s = sd(s_est, na.rm = TRUE),
n_s = n()) %>%
mutate(quant25 = quantile(s_est, 0.25),
quant75 = quantile(s_est, 0.5))
p_data %>% group_by(Model) #%>%
p_data %>% group_by(Model) %>%
#summarise(mean_s = mean(s_est), median_s = median(s_est),
#         sd_s = sd(s_est, na.rm = TRUE),
#        n_s = n()) %>%
mutate(quant25 = quantile(s_est, 0.25),
quant75 = quantile(s_est, 0.5))
p_data %>% group_by(Model) %>%
#summarise(mean_s = mean(s_est), median_s = median(s_est),
#         sd_s = sd(s_est, na.rm = TRUE),
#        n_s = n()) %>%
summarise(quant25 = quantile(s_est, 0.25),
quant75 = quantile(s_est, 0.5))
